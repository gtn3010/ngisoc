package sbom

import (
	"fmt"

	"github.com/google/go-containerregistry/pkg/crane"
	"github.com/gtn3010/ngisoc/pkg/util"
)

func GetBuildkit(imgName string, platform *util.PlatformValue, options *[]crane.Option) (string, error) {
	manifest, err := crane.Get(imgName, *options...)
	if err != nil {
		return "", fmt.Errorf("fetching manifest %s: %w", imgName, err)
	}
	imgidx, err := manifest.ImageIndex()
	if err == nil {
		imgidxman, err := imgidx.IndexManifest()
		if err != nil {
			return "No sbom generated by Buildkit", nil
		}
		var manifestsPlatform = map[string]string{}
		for _, man := range imgidxman.Manifests {
			if platform.String() == "all" {
				if man.Platform.String() != "unknown/unknown" {
					manifestsPlatform[man.Platform.String()] = man.Digest.String()
				}
			} else {
				if platform.String() == man.Platform.String() {
					manifestsPlatform[platform.String()] = man.Digest.String()
				}
			}
		}
		for _, man := range imgidxman.Manifests {
			if man.Platform.String() == "unknown/unknown" {
				if man.Annotations["vnd.docker.reference.type"] == "attestation-manifest" {
					for k, v := range manifestsPlatform {
						if man.Annotations["vnd.docker.reference.digest"] == v {
							manifestsPlatform[k] = man.Digest.String()
						}
					}
					// i, _ := z.LayerByDigest(man.Digest)
					// fmt.Println(i.Compressed())
					// l, _ := crane.PullLayer(img, *options...)
					// if err == nil {
					// 	fmt.Println(l.Compressed())
					// }
				}
			}
		}
		fmt.Println(manifestsPlatform)
		for i, j := range manifestsPlatform {
			plman, _ := crane.Get(util.ImageWithoutDigest(imgName)+"@"+j, *options...)
			imgref, _ := plman.Image()
			layers, _ := imgref.Layers()
			for _, y := range layers {
				fmt.Println(i)
				// z, _ := y.Compressed()
				y.Compressed()
				// fmt.Println(util.ConvertToByte(z))
			}

		}
	}
	return "No sbom generated by Buildkit", nil
}
